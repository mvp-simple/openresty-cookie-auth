location /sample/sample_test
{
    #     перед запуском примера выполните в только инициированной бд следующий запросы
    #     INSERT INTO auth.users
    #     (created_at, updated_at, deleted_at, login, "password", fio)
    #     VALUES(now(),now(), NULL, 'admin', '6364d3f0f495b6ab9dcf8d3b5c6e0b01', '');
    #
    #     INSERT INTO auth.urls (created_at, updated_at, title, uri) VALUES(now(),now(), 'sample', '/sample/sample_test');
    #     INSERT INTO auth.users_custom_urls (user_id, url_id) VALUES(1, (select id from auth.urls u where uri = '/sample/sample_test' limit 1));
    #     в браузере перейдите по адресу
    #     http://здесь_ваш_ip:здесь_порт_обычно_80/sample/sample_test
    #     вы увидите сообщение
    #     {"ok":true,"res":"кука не валидна"}
    #     далее в консоли браузера(F12) выполните следующий код
    #     fetch("http://здесь_ваш_ip:здесь_порт_обычно_80/auth/login", {
    #           "referrerPolicy": "strict-origin-when-cross-origin",
    #           "body": JSON.stringify({login:"admin", password:"32"}),
    #           "method": "POST",
    #           "mode": "cors",
    #           "credentials": "include"
    #     });
    #     перезаргузите http://здесь_ваш_ip:здесь_порт_обычно_80/sample/sample_test
    #     вы увидите сообщение
    #     {"user_id":"1","msg":"ok","ctx_user_id":"1"}
    #     В заголовках ответа вы получите X-AUTH-USER-ID: 1
    access_by_lua_file /etc/nginx/lua/auth/check.lua;
    content_by_lua_block {
        ngx.say(JSONEncode(
            {
                msg = "ok",
                user_id = ngx.req.get_headers()['X-AUTH-USER-ID'], -- из заголовков, можно использовать в микросервисах
                ctx_user_id = ngx.ctx.user_id, -- из контекста, можно использовать внутри nginx конфигураций
             }
        ))
    }
}

location /sample/sample_test_off
{
    access_by_lua_file /etc/nginx/lua/auth/check.lua;
    content_by_lua_block {
        ngx.say("никогда не достигнет пока не добавлены разрешения")
    }
}